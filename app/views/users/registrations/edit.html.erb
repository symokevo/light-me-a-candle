<h2>Edit <%= resource_name.to_s.humanize %></h2>

<%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, class: "needs-validation", novalidate: true }) do |f| %>
  <%= render "users/shared/error_messages", resource: resource %>

  <div class="mb-3">
    <%= f.label :email, class: "form-label" %>
    <%= f.email_field :email, class: "form-control", autofocus: true, autocomplete: "email", required: true %>
    <div class="invalid-feedback">
      Please enter a valid email address.
    </div>
  </div>

  <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
    <div class="alert alert-info" role="alert">
      Currently waiting confirmation for: <%= resource.unconfirmed_email %>
    </div>
  <% end %>

  <div class="mb-3">
    <%= f.label :password, class: "form-label" %>
    <i>(leave blank if you don't want to change it)</i>
    <%= f.password_field :password, class: "form-control", autocomplete: "new-password" %>
    <% if @minimum_password_length %>
      <div class="form-text">
        <em><%= @minimum_password_length %> characters minimum</em>
      </div>
    <% end %>
  </div>

  <div class="mb-3">
    <%= f.label :password_confirmation, class: "form-label" %>
    <%= f.password_field :password_confirmation, class: "form-control", autocomplete: "new-password" %>
  </div>

  <div class="mb-3">
    <%= f.label :current_password, class: "form-label" %>
    <i>(we need your current password to confirm your changes)</i>
    <%= f.password_field :current_password, class: "form-control", autocomplete: "current-password", required: true %>
    <div class="invalid-feedback">
      Please enter your current password.
    </div>
  </div>

  <div class="mb-3">
    <%= f.submit "Update", class: "btn btn-primary" %>
  </div>
<% end %>

<h3>Cancel my account</h3>

<div class="mb-3">
  Unhappy? 
  <%= button_to "Cancel my account", registration_path(resource_name), class: "btn btn-danger", data: { confirm: "Are you sure?", turbo_confirm: "Are you sure?" }, method: :delete %>
</div>

<div class="mb-3">
  <%= link_to "Back", :back, class: "btn btn-secondary" %>
</div>

<script>
  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (function () {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
          }

          form.classList.add('was-validated')
        }, false)
      })
  })()
</script>
