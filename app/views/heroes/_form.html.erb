<%= form_with(model: hero, local: true, html: { class: "needs-validation", novalidate: true }) do |form| %>
  <% if hero.errors.any? %>
    <div id="error_explanation" class="alert alert-danger">
      <h4 class="alert-heading"><%= pluralize(hero.errors.count, "error") %> prohibited this hero from being saved:</h4>
      <ul>
        <% hero.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="mb-3">
    <%= form.label :name, class: "form-label" %>
    <%= form.text_field :name, class: "form-control", required: true %>
    <div class="invalid-feedback">
      Please provide a name.
    </div>
  </div>

  <div class="mb-3">
    <%= form.label :image, class: "form-label" %>
    <%= form.file_field :image, class: "form-control" %>
    <div class="invalid-feedback">
      Please provide a valid image.
    </div>
  </div>

  <div class="mb-3">
    <%= form.label :note, class: "form-label" %>
    <%= form.text_area :note, class: "form-control" %>
  </div>

  <div class="d-grid">
    <%= form.submit class: "btn btn-primary" %>
  </div>
<% end %>

<script>
  // JavaScript for disabling form submissions if there are invalid fields
  (function () {
    'use strict';
    window.addEventListener('load', function () {
      var forms = document.getElementsByClassName('needs-validation');
      Array.prototype.filter.call(forms, function (form) {
        form.addEventListener('submit', function (event) {
          if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    }, false);
  })();
</script>
